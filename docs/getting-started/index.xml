<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Getting Started on Rootless Containers</title>
    <link>https://rootlesscontaine.rs/getting-started/</link>
    <description>Recent content in Getting Started on Rootless Containers</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://rootlesscontaine.rs/getting-started/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker/Moby</title>
      <link>https://rootlesscontaine.rs/getting-started/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/docker/</guid>
      <description>Rootless Docker/Moby was initially proposed in early 2018 and has been merged to the Docker/Moby upstream since Docker 19.03.
Docker 19.03 provides almost full features for Rootless mode, including support for port fowarding (docker run -p) and multi-container networking (docker network create), but it doesn&amp;rsquo;t support limiting resources with cgroup.
Docker 20.10 (beta as of October 2020) added support for limiting resources using cgroup v2.
Installation Note
Please read the common steps first.</description>
    </item>
    
    <item>
      <title>Podman</title>
      <link>https://rootlesscontaine.rs/getting-started/podman/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/podman/</guid>
      <description>The following table shows the feature implementation status of Rootless Podman:
   Version Notable changes     Pre-1.1 Initial support for Rootless mode   1.1 Added support for port forwarding (podman run -p)   1.5 Added support for cgroup v2   2.1 Added support for multi-container networking (podman create network)    FAQ: Docker/Moby vs Podman?
Until recently, Docker/Moby had lacked support for cgroup v2, and on the other hand Podman had lacked support for multi-container networking.</description>
    </item>
    
    <item>
      <title>BuildKit</title>
      <link>https://rootlesscontaine.rs/getting-started/buildkit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/buildkit/</guid>
      <description>Note
Please read the common steps first.
 See https://github.com/moby/buildkit/blob/master/docs/rootless.md</description>
    </item>
    
    <item>
      <title>Umoci</title>
      <link>https://rootlesscontaine.rs/getting-started/umoci/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/umoci/</guid>
      <description>See https://umo.ci/quick-start/rootless/</description>
    </item>
    
    <item>
      <title>containerd</title>
      <link>https://rootlesscontaine.rs/getting-started/containerd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/containerd/</guid>
      <description>Note
Please read the common steps first.
 See https://github.com/containerd/containerd/blob/master/docs/rootless.md</description>
    </item>
    
    <item>
      <title>runc</title>
      <link>https://rootlesscontaine.rs/getting-started/runc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/runc/</guid>
      <description>Note
Please read the common steps first.
 See https://github.com/opencontainers/runc/#rootless-containers</description>
    </item>
    
    <item>
      <title>LXC</title>
      <link>https://rootlesscontaine.rs/getting-started/lxc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/lxc/</guid>
      <description>Note
Please read the common steps first.
 Running unprivileged LXC To be documented.</description>
    </item>
    
    <item>
      <title>Singularity</title>
      <link>https://rootlesscontaine.rs/getting-started/singularity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/singularity/</guid>
      <description>Note
Please read the common steps first.
 Singularity provides two modes for running containers as a non-root user:
 SETUID mode Fakeroot mode  The former one does not fall into the scope of Rootless Containers, as the actual runtime binary gains the root privileges via the SETUID bit.
The latter one falls into our scope, but it should be noted that it does not support creating network namespaces with Internet connectivity.</description>
    </item>
    
    <item>
      <title>udocker</title>
      <link>https://rootlesscontaine.rs/getting-started/udocker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/udocker/</guid>
      <description>Note
Please read the common steps first.
 Note
udocker is not Docker.
 udocker provides four modes for running containers as a non-root user:
 Pn: Proot mode Fn: fakechroot mode Rn: rootless runc mode Sn: Singularity mode  The third mode (Rn) falls into the scope of Rootless Containers, but the others are not: Pn and Fn are not containers (in our view), and Sn requires SETUID bit.</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>https://rootlesscontaine.rs/getting-started/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rootlesscontaine.rs/getting-started/kubernetes/</guid>
      <description>Note
Please read the common steps first.
 We have been proposing our patchset for supporting Rootless mode to the Kubernetes upstream, but our proposal has not been merged yet: https://github.com/kubernetes/enhancements/pull/1371
Usernetes Usernetes is our reference Kubernetes distribution to support Rootless mode.
See https://github.com/rootless-containers/usernetes
$ tar xjvf usernetes-x86_64.tbz $ cd usernetes $ ./install.sh --cri=containerd --cgroup-manager=systemd $ export KUBECONFIG=&amp;quot;$HOME/.config/usernetes/master/admin-localhost.kubeconfig&amp;quot; $ kubectl apply -f manifests/*.yaml k3s k3s supports Rootless mode using our Usernetes patchset.</description>
    </item>
    
  </channel>
</rss>
